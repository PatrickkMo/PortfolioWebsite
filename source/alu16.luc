// main

module alu16 (

    input alufn[6],
    input x[16],
    input y[16],
    output out[16],
    output z,
    output v,
    output n,
    output err
  ) {
  
  // Initialise modules
 //.clk(clk), .rst(rst){
 
    //}
  boolean16 boolean16 (.x(x), .y(y), .alufn(alufn[5:0]));
  shifter16 shifter16 (.x(x), .y(y), .alufn(alufn[5:0]));
  comparator16 comparator16 (.x(x), .y(y), .alufn(alufn[5:0]));
   adder16 addormul16 (.x(x), .y(y), .alufn(alufn[5:0]));
  always {
    // zvn output non-zero when adder16 or multiplier16
    z = 0;
    v = 0;
    n = 0;

    err = 0;
    
    //ALU output
    case (alufn[5:4]) {
      b00:
        out = addormul16.s;
        z = addormul16.z;
        v = addormul16.v;
        n = addormul16.n;
        err = addormul16.err;

      b01:
        out = boolean16.result;

      b10:
        out = shifter16.result;

      b11:
        out = comparator16.result;

      default:
        out = 16b0;
    }
  }
  
}
  





